package vrpproblems.sintef.drools;
dialect "java"

import common.basedomain.timewindowed.TimeWindowedJob;
import vrpproblems.sintef.domain.SintefVehicle;
import vrpproblems.sintef.domain.SintefJob;
import org.optaplanner.core.api.score.buildin.hardmediumsoftlong.HardMediumSoftLongScoreHolder;

global HardMediumSoftLongScoreHolder scoreHolder;

rule "A job should only take place during a job's timewindow"
    when
        TimeWindowedJob(previousStandstill != null, !isArrivalOnTime())
    then
        scoreHolder.addHardConstraintMatch(kcontext, -1);
end


rule "A vehicle cannot carry more items than its capacity"
    when
        $vehicle: SintefVehicle($capacity: capacity);
        accumulate(
            SintefJob(
                $vehicle == vehicle,
                $demand: demand
            );
            $totalDemand: sum($demand);
            $totalDemand > $capacity
        )
    then
        scoreHolder.addHardConstraintMatch(kcontext, -($totalDemand-$capacity));
end


    